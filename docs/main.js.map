{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/liked/liked.component.ts","./src/app/components/liked/liked.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/news-list/news-list.component.ts","./src/app/components/news-list/news-list.component.html","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/verify-email/verify-email.component.ts","./src/app/components/verify-email/verify-email.component.html","./src/app/guard/auth.guard.ts","./src/app/modules/app-routing.module.ts","./src/app/modules/material.module.ts","./src/app/services/auth.service.ts","./src/app/services/categories.service.ts","./src/app/services/liked.service.ts","./src/app/services/news.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  [x: string]: any;\r\n  title = 'newsApp';\r\n  selectedCategory: string = 'general';\r\n\r\n  isLoggedIn: boolean = false;\r\n  isLoginPage: boolean = false;\r\n  \r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router\r\n    ) {\r\n      this.activatedRoute.url.subscribe((segments) => {\r\n        this.isLoginPage = segments.some((segment) => segment.path === 'login');\r\n      });\r\n      this.router.events.subscribe((event) => {\r\n        if (event instanceof NavigationEnd) {\r\n          this.isLoggedIn = event.url !== '/login';\r\n      }\r\n    });\r\n  }\r\n  \r\n  onCategoryChanged(category: string) {\r\n    this.selectedCategory = category;\r\n  }\r\n}","<div class=\"container\">\r\n  <app-header></app-header>\r\n\r\n  <app-toolbar\r\n    (categoryChanged)=\"onCategoryChanged($event)\"\r\n    *ngIf=\"isLoggedIn && !isLoginPage\"\r\n  ></app-toolbar>\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './modules/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NewsListComponent } from './components/news-list/news-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NewsService } from './services/news.service';\r\nimport { MaterialModule } from './modules/material.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\r\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { CategoryService } from './services/categories.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { LikedComponent } from './components/liked/liked.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NewsListComponent,\r\n        LoginComponent,\r\n        RegistrationComponent,\r\n        ForgotPasswordComponent,\r\n        VerifyEmailComponent,\r\n        SearchComponent,\r\n        ToolbarComponent,\r\n        HeaderComponent,\r\n        LikedComponent,\r\n    ],\r\n    providers: [AuthService, NewsService, CategoryService],\r\n    bootstrap: [AppComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n        AngularFireModule.initializeApp(environment.firebase),\r\n        AngularFirestoreModule,\r\n        AngularFireAuthModule,\r\n        AngularFireStorageModule,\r\n        AngularFireDatabaseModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatDividerModule,\r\n        MatSlideToggleModule\r\n    ]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport {\r\n  trigger,\r\n  style,\r\n  animate,\r\n  transition,\r\n  // ...\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css'],\r\n  animations: [\r\n    trigger('myInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('1s', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [animate('1s', style({ opacity: 0 }))]),\r\n    ]),\r\n    trigger('myOtherInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('0.5s', style({ transform: 'translateX(0)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('0.5s', style({ transform: 'translateX(100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  isLoading = false;\r\n  constructor(public authService: AuthService) {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"container\">\r\n  <mat-card @myInsertRemoveTrigger class=\"displayTable\">\r\n    <mat-card-content>\r\n      <mat-card-header class=\"displayTableCell\">\r\n        <h3>Reset Password</h3>\r\n        <p class=\"text-center\">\r\n          Please enter your email address to request a password reset.\r\n        </p>\r\n      </mat-card-header>\r\n      <mat-form-field class=\"formGroup\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"email\"\r\n          class=\"formControl\"\r\n          placeholder=\"Email Address\"\r\n          #passwordResetEmail\r\n          required\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-actions class=\"formGroup\">\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          class=\"btn btnPrimary\"\r\n          (click)=\"\r\n            [\r\n              authService.show(),\r\n              authService.ForgotPassword(passwordResetEmail.value)\r\n            ]\r\n          \"\r\n        >\r\n          Reset Password\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <mat-card-footer class=\"redirectToLogin\">\r\n        <span\r\n          >Go back to ?\r\n          <span class=\"redirect\" routerLink=\"/login\"> Log In</span></span\r\n        >\r\n      </mat-card-footer>\r\n    </mat-card-content>\r\n    <mat-progress-bar\r\n      *ngIf=\"authService.isLoading$ | async\"\r\n      mode=\"indeterminate\"\r\n    ></mat-progress-bar>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  currentDay: string = '';\r\n  currentDate: Date = new Date();\r\n  currentTime: Date = new Date();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateTime();\r\n    setInterval(() => this.updateTime(), 1000);\r\n  }\r\n\r\n  private updateTime() {\r\n    const now = new Date();\r\n    this.currentDay = this.getDayOfWeek(now.getDay());\r\n    this.currentDate = now;\r\n    this.currentTime = now;\r\n  }\r\n\r\n  private getDayOfWeek(dayIndex: number): string {\r\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    return daysOfWeek[dayIndex];\r\n  }\r\n}","<div class=\"header\">\r\n  <div class=\"clock\">\r\n    <p>\r\n      {{ currentDay }}\r\n      {{ currentTime | date : \"HH:mm:ss\" }} MST,\r\n      {{ currentDate | date : \"MM-dd-yyyy\" }}\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"api\">\r\n    <p>\r\n      Powered by:\r\n      <a href=\"https://newsapi.org/\" target=\"_blank\">\r\n        <img src=\"./assets/news_logo.png\" alt=\"logo\" width=\"50\"/>\r\n      </a>\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"banner\">\r\n  <h1 class=\"theHeader\">InfoHub News: Bringing the World to Your Screen</h1>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { LikedService, LikedArticle } from '../../services/liked.service';\r\nimport { User } from '../../interfaces/user';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-liked',\r\n  templateUrl: './liked.component.html',\r\n  styleUrls: ['./liked.component.css'],\r\n})\r\nexport class LikedComponent implements OnInit {\r\n  likedArticles: LikedArticle[] = [];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private likedService: LikedService,\r\n    private router: Router\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n      this.authService.getUserData().subscribe((user: User) => {\r\n        this.likedArticles = this.likedService.getLikedArticles();\r\n      });\r\n    }\r\n\r\n\r\n  goBackToTopHeadlines() {\r\n    this.router.navigate(['top-headlines']);\r\n  }\r\n\r\n}\r\n","<div class=\"likedSection\">\r\n  <h1>User liked articles</h1>\r\n\r\n  <button\r\n    mat-button\r\n    (click)=\"goBackToTopHeadlines()\"\r\n    class=\"cardButton goBackButton\"\r\n  >\r\n    <mat-icon aria-hidden=\"false\" aria-label=\"icon\">arrow_back</mat-icon>\r\n    <span>Go Back</span>\r\n  </button>\r\n  <br />\r\n  <mat-divider></mat-divider>\r\n</div>\r\n\r\n\r\n<div class=\"news-list\">\r\n  <mat-card *ngFor=\"let likedArticle of likedArticles\" class=\"searchResults\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <h3>\r\n          <a id=\"subtitler\" target=\"_blank\" [href]=\"likedArticle.url\">\r\n            {{ likedArticle.title }}\r\n          </a>\r\n        </h3>\r\n        <p>{{ likedArticle.description }}</p>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n  </mat-card>\r\n  \r\n  \r\n  <mat-divider></mat-divider>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport {\r\n  trigger,\r\n  style,\r\n  animate,\r\n  transition,\r\n  // ...\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  animations: [\r\n    trigger('myInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('1s', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [animate('1s', style({ opacity: 0 }))]),\r\n    ]),\r\n    trigger('myOtherInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('0.5s', style({ transform: 'translateX(0)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('0.5s', style({ transform: 'translateX(100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isLoading = false;\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"container\">\r\n  <mat-card class=\"login-card\" @myInsertRemoveTrigger>\r\n    <img src=\"./assets/infohub_logo.png\" alt=\"logo\" width=\"400\" />\r\n    <mat-card-header>\r\n      <h2>Login</h2>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Username</mat-label>\r\n        <input matInput type=\"text\" #userName />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" #userPassword />\r\n      </mat-form-field>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-divider></mat-divider>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"\r\n          authService.show();\r\n          authService.SignIn(userName.value, userPassword.value)\r\n        \"\r\n      >\r\n        Login\r\n      </button>\r\n    </mat-card-actions>\r\n    <mat-card-footer>\r\n      <span>\r\n        Or\r\n        <span class=\"forgotPassword\" routerLink=\"/forgot-password\"\r\n          >Forgot Password?</span\r\n        >\r\n      </span>\r\n      <span>\r\n        Don't have an account?\r\n        <span class=\"SignUp\" routerLink=\"/register\">Sign Up</span>\r\n      </span>\r\n      <mat-progress-bar\r\n        *ngIf=\"authService.isLoading$ | async\"\r\n        mode=\"indeterminate\"\r\n      ></mat-progress-bar>\r\n    </mat-card-footer>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { NewsService } from '../../services/news.service';\r\nimport { CategoryService } from '../../services/categories.service';\r\nimport { LikedService, LikedArticle } from 'src/app/services/liked.service';\r\n\r\n@Component({\r\n  selector: 'app-news-list',\r\n  templateUrl: './news-list.component.html',\r\n  styleUrls: ['./news-list.component.css'],\r\n})\r\nexport class NewsListComponent implements OnInit {\r\n  @Input() selectedCategory: string = 'business';\r\n  headlines: any;\r\n  selectedCategory$: any\r\n\r\n  categories = this.categoryService.categories;\r\n  constructor(\r\n    private newsService: NewsService,\r\n    private categoryService: CategoryService,\r\n    private likedService: LikedService\r\n    ) {\r\n    this.selectedCategory$ = this.newsService.selectedCategory$;\r\n    console.log(this.selectedCategory);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getNews(this.selectedCategory);\r\n    this.selectedCategory$.subscribe(category => {\r\n    console.log(category);\r\n      this.selectedCategory = category\r\n      this.getNews(this.selectedCategory)\r\n    })\r\n  }\r\n\r\n  getNews(category: string) {\r\n    this.newsService.getTopHeadlines(category).subscribe((data: any) => {\r\n      this.headlines = data.articles;\r\n      console.log(data);\r\n      \r\n    });\r\n  }\r\n  onCategoryChange(event: string) {\r\n    console.log(event, 'received');\r\n    this.selectedCategory = event;\r\n    this.getNews(this.selectedCategory);\r\n  }\r\n\r\n  truncatedText(title: string): string {\r\n    if (title.length > 60) {\r\n      return title.substring(0, 60) + '...';\r\n    } else {\r\n      return title;\r\n    }\r\n  }\r\n\r\n  likedArticles(articleUrl: string) {\r\n    const likedArticle: LikedArticle = {\r\n      url: articleUrl,\r\n      title: 'title',\r\n      description: 'description',\r\n    };\r\n    this.likedService.addLikedArticle(likedArticle);\r\n    console.log(articleUrl);\r\n  }\r\n  \r\n  \r\n}\r\n\r\n","<div class=\"news-list\">\r\n  <mat-card-title id=\"topHeadlinesTitle\">\r\n    <h1 class=\"h1Headlines\">Top Headlines: <small>{{ selectedCategory }}</small></h1>\r\n    <mat-divider class=\"custom-divider\"></mat-divider>\r\n  </mat-card-title>\r\n\r\n  <div class=\"news-items\">\r\n    <mat-card *ngFor=\"let article of headlines\" class=\"news-item\">\r\n      <a href=\"{{ article.url }}\" target=\"_blank\">\r\n        <div class=\"image-container\">\r\n          <img\r\n            src=\"{{ article.urlToImage ? article.urlToImage : defaultImage }}\"\r\n            alt=\"img\"\r\n            id=\"snapshotImg\"\r\n          />\r\n        </div>\r\n      </a>\r\n      <mat-card-header>\r\n        <mat-card-title>\r\n          <h3>\r\n            <a id=\"subtitler\">{{ article.title }}</a>\r\n          </h3>\r\n          <!-- <p id=\"articleDescription\">{{ truncatedText(article.description) }}</p> -->\r\n          <p id=\"articlePublished\">\r\n            <em>{{ article.publishedAt }}</em>\r\n          </p>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <a [href]=\"\" target=\"_blank\" class=\"like\" (click)='likedArticles(article.url)'>\r\n        <mat-icon style=\"font-size: 20px;\" aria-hidden=\"false\" aria-label=\"icon\" fontIcon=\"favorite\"></mat-icon>\r\n      </a>\r\n    </mat-card>\r\n    <mat-divider></mat-divider>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport {\r\n  trigger,\r\n  style,\r\n  animate,\r\n  transition,\r\n  // ...\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css'],\r\n  animations: [\r\n    trigger('myInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('1s', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [animate('1s', style({ opacity: 0 }))]),\r\n    ]),\r\n    trigger('myOtherInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('0.5s', style({ transform: 'translateX(0)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('0.5s', style({ transform: 'translateX(100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  isLoading = false;\r\n  constructor(public authService: AuthService) {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"container\">\r\n  <mat-card @myInsertRemoveTrigger class=\"login-card\">\r\n    <mat-card-header>\r\n      <h2>Register</h2>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput type=\"email\" #userEmail />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" #userPwd />\r\n      </mat-form-field>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-divider></mat-divider>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"\r\n          [\r\n            authService.show(),\r\n            authService.SignUp(userEmail.value, userPwd.value)\r\n          ]\r\n        \"\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </mat-card-actions>\r\n    <mat-card-footer>\r\n      <span\r\n        >Already have an account?\r\n        <span class=\"redirect\" routerLink=\"/login\">Log In</span></span\r\n      >\r\n    </mat-card-footer>\r\n    <mat-progress-bar\r\n      *ngIf=\"authService.isLoading$ | async\"\r\n      mode=\"indeterminate\"\r\n    ></mat-progress-bar>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NewsService } from '../../services/news.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  searchResults: { title: string; url: string }[] = [];\r\n  @Input() searchFilter = '';\r\n  // @Input() searchFilter = 'apple';\r\n  headlines: any;\r\n\r\n  constructor(private newsService: NewsService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getSearchResults();\r\n  }\r\n\r\n  getSearchResults() {\r\n    if (this.searchFilter.trim() !== '') {\r\n      this.newsService.searchArticles(this.searchFilter).subscribe(\r\n        (data: any) => {\r\n          this.headlines = data.articles;\r\n          console.log(this.headlines);\r\n          this.searchResults = this.headlines.map((article: any) => {\r\n            return {\r\n              title: article.title,\r\n              url: article.url,\r\n            };\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error on API request:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onFilterChange(event: any) {\r\n    const filter = event.target.value;\r\n    this.searchFilter = filter;\r\n    this.getSearchResults();\r\n  }\r\n\r\n  goBackToTopHeadlines() {\r\n    this.router.navigate(['top-headlines']);\r\n  }\r\n\r\n  truncatedText(title: string): string {\r\n    if (title.length > 60) {\r\n      return title.substring(0, 60) + '...';\r\n    } else {\r\n      return title;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"searchInput\">\r\n  <h2>Search by keyword</h2>\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Type a keyword to find</mat-label>\r\n    <input matInput (input)=\"onFilterChange($event)\" />\r\n    <mat-icon matSuffix>search</mat-icon>\r\n    <mat-hint>can use AND / OR / NOT keywords</mat-hint>\r\n  </mat-form-field>\r\n  <br />\r\n  <button\r\n    mat-button\r\n    (click)=\"goBackToTopHeadlines()\"\r\n    class=\"cardButton goBackButton\"\r\n  >\r\n    <mat-icon aria-hidden=\"false\" aria-label=\"icon\">arrow_back</mat-icon>\r\n    <span>Go Back</span>\r\n  </button>\r\n  <br />\r\n</div>\r\n<mat-divider></mat-divider>\r\n\r\n<h2 id=\"searchTitler\">Your Search Results</h2>\r\n<div class=\"news-list\">\r\n\r\n  <mat-card *ngFor=\"let article of searchResults\" class=\"searchResults\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <h3>\r\n          <a id=\"subtitler\" target=\"_blank\" href=\"{{ article.url }}\">\r\n            {{ truncatedText(article.title) }}\r\n          </a>\r\n        </h3>\r\n        <p>{{ article.description }}</p>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content id=\"actions\">\r\n      <a mat-button [href]=\"\" target=\"_blank\" class=\"cardButton\">\r\n        <mat-icon\r\n          aria-hidden=\"false\"\r\n          aria-label=\"icon\"\r\n          fontIcon=\"thumb_up\"\r\n        ></mat-icon>\r\n      </a>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <mat-divider></mat-divider>\r\n</div>\r\n","import { Component, EventEmitter, Output, OnInit, HostListener } from '@angular/core';\r\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/categories.service';\r\nimport { NewsService } from 'src/app/services/news.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\n\r\nexport class ToolbarComponent implements OnInit {\r\n  isSmallScreen = false;\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event: any) {\r\n    this.isSmallScreen = event.target.innerWidth < 860;\r\n    this.windowInnerWidth = window.innerWidth;\r\n  }\r\n  \r\n  isAuthenticated: boolean = false;\r\n  windowInnerWidth: number;\r\n\r\n  categories = this.categoryService.categories;\r\n  showSearchComponent: boolean = false;\r\n  newsListComponent: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    public authService: AuthService, \r\n    private categoryService: CategoryService,\r\n    public newsService: NewsService) {\r\n    this.windowInnerWidth = window.innerWidth;\r\n  }\r\n\r\n  selectedCategory: string = 'general';\r\n  @Output() categoryChanged = new EventEmitter<string>();\r\n\r\n  onCategoryChange(event: MatButtonToggleChange) {\r\n    this.selectedCategory = event.value;\r\n    this.categoryChanged.emit(this.selectedCategory);\r\n  \r\n    if (event.value === 'Search') {\r\n      this.router.navigate(['search']);\r\n    } else if (event.value === 'Start') {\r\n      this.router.navigate(['top-headlines']);\r\n    } else if (event.value === 'Liked') {\r\n      this.router.navigate(['Liked'])\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.isAuthenticated().subscribe((authenticated) => {\r\n      this.isAuthenticated = authenticated;\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <mat-button-toggle-group [(ngModel)]=\"selectedCategory\" (change)=\"onCategoryChange($event)\">\r\n    <mat-button-toggle *ngFor=\"let category of categories\" [value]=\"category.name\" (click)=\"newsService.show(category.name)\">\r\n      <mat-icon *ngIf=\"isSmallScreen\">{{ category.icon }}</mat-icon>\r\n      <span *ngIf=\"!isSmallScreen\">{{ category.name }}</span>\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n\r\n  <span *ngIf=\"authService.isLoggedIn\" class=\"material-symbols-outlined logout\" (click)=\"authService.SignOut()\">\r\n    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"logout\" id=\"logout\"></mat-icon>\r\n    logout\r\n  </span>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport {\r\n  trigger,\r\n  style,\r\n  animate,\r\n  transition,\r\n  // ...\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.component.html',\r\n  styleUrls: ['./verify-email.component.css'],\r\n  animations: [\r\n    trigger('myInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('1s', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [animate('1s', style({ opacity: 0 }))]),\r\n    ]),\r\n    trigger('myOtherInsertRemoveTrigger', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('0.5s', style({ transform: 'translateX(0)' })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('0.5s', style({ transform: 'translateX(100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  constructor(public authService: AuthService) {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"container\">\r\n  <mat-card @myInsertRemoveTrigger class=\"displayTableCell\">\r\n    <mat-card-content class=\"authBlock\">\r\n      <h3>Thank You for Registering</h3>\r\n      <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\r\n        <p class=\"text-center\">\r\n          We have sent a confirmation email to <strong>{{ user.email }}</strong\r\n          >.\r\n        </p>\r\n        <p class=\"text-center\">\r\n          Please check your email and click on the link to verify your email\r\n          address.\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"button\">\r\n        <button\r\n          type=\"button\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          (click)=\"authService.SendVerificationMail()\"\r\n        >\r\n          <i class=\"fas fa-redo-alt\"></i>\r\n          Resend Verification Email\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-footer class=\"redirectToLogin\">\r\n      <span\r\n        >Go back to?\r\n        <span class=\"redirect\" routerLink=\"/login\"> Sign in</span></span\r\n      >\r\n    </mat-card-footer>\r\n  </mat-card>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard {\r\n  constructor(public authService: AuthService, public router: Router) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | UrlTree | boolean {\r\n    if (this.authService.isLoggedIn !== true) {\r\n      this.router.navigate(['login']);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../components/login/login.component';\r\nimport { NewsListComponent } from '../components/news-list/news-list.component';\r\nimport { RegistrationComponent } from '../components/registration/registration.component';\r\nimport { ForgotPasswordComponent } from '../components/forgot-password/forgot-password.component';\r\nimport { VerifyEmailComponent } from '../components/verify-email/verify-email.component';\r\nimport { SearchComponent } from '../components/search/search.component';\r\nimport { LikedComponent } from '../components/liked/liked.component';\r\n\r\nimport { AuthGuard } from '../guard/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: 'top-headlines', component: NewsListComponent, canActivate: [AuthGuard] },\r\n  { path: 'forgot-password', component: ForgotPasswordComponent },\r\n  { path: 'verify-email-address', component: VerifyEmailComponent },\r\n  { path: 'search', component: SearchComponent },\r\n  { path: 'Liked', component: LikedComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport {MatAccordion, MatExpansionModule} from '@angular/material/expansion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { User } from '../interfaces/user';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/compat/firestore';\r\nimport * as auth from 'firebase/auth';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { take, map, switchMap } from 'rxjs/operators';\r\nimport { Subject, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n\r\n  private isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  [x: string]: any;\r\n  private isLoading = new Subject<boolean>();\r\n  isLoading$ = this.isLoading.asObservable();\r\n  userData: any; // Save logged in user data\r\n  constructor(\r\n    public afs: AngularFirestore, // Inject Firestore service\r\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\r\n    public router: Router,\r\n    public ngZone: NgZone // NgZone service to remove outside scope warning\r\n  ) {\r\n    /* Saving user data in localstorage when \r\n    logged in and setting up null when logged out */\r\n    this.afAuth.authState.subscribe((user) => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        this.isAuthenticatedSubject.next(true);\r\n        JSON.parse(localStorage.getItem('user')!);\r\n      } else {\r\n        localStorage.setItem('user', 'null');\r\n        this.isAuthenticatedSubject.next(false);\r\n        JSON.parse(localStorage.getItem('user')!);\r\n      }\r\n    });\r\n  }\r\n\r\n  show() {\r\n    this.isLoading.next(true);\r\n  }\r\n\r\n  hide() {\r\n    this.isLoading.next(false);\r\n  }\r\n  // Sign in with email/password\r\n  SignIn(email: string, password: string) {\r\n    setTimeout(() => {\r\n      this.isLoading.next(false);\r\n      return this.afAuth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((result) => {\r\n          this.SetUserData(result.user);\r\n          this.afAuth.authState.subscribe((user) => {\r\n            if (user) {\r\n              this.router.navigate(['top-headlines']);\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          window.alert(error.message);\r\n        });\r\n    }, 2000);\r\n  }\r\n  // Sign up with email/password\r\n  SignUp(email: string, password: string) {\r\n    setTimeout(() => {\r\n      this.isLoading.next(false);\r\n      return this.afAuth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((result) => {\r\n          /* Call the SendVerificaitonMail() function when new user sign \r\n          up and returns promise */\r\n          this.SendVerificationMail();\r\n          this.SetUserData(result.user);\r\n        })\r\n        .catch((error) => {\r\n          window.alert(error.message);\r\n        });\r\n    }, 2000);\r\n  }\r\n  // Send email verfificaiton when new user sign up\r\n  SendVerificationMail() {\r\n    return this.afAuth.currentUser\r\n      .then((u: any) => u.sendEmailVerification())\r\n      .then(() => {\r\n        this.router.navigate(['verify-email-address']);\r\n      });\r\n  }\r\n  // Reset Forggot password\r\n  ForgotPassword(passwordResetEmail: string) {\r\n    setTimeout(() => {\r\n      this.isLoading.next(false);\r\n      return this.afAuth\r\n        .sendPasswordResetEmail(passwordResetEmail)\r\n        .then(() => {\r\n          window.alert('Password reset email sent, check your inbox.');\r\n        })\r\n        .catch((error) => {\r\n          window.alert(error);\r\n        });\r\n    }, 2000);\r\n  }\r\n  // Returns true when user is looged in and email is verified\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user')!);\r\n    return user !== null && user.emailVerified !== false ? true : false;\r\n  }\r\n  /* Setting up user data when sign in with username/password, \r\n  sign up with username/password and sign in with social auth  \r\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\r\n  SetUserData(user: any) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(\r\n      `users/${user.uid}`\r\n    );\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified,\r\n      likedArticles: [],\r\n      // likedArticles: user.likedArticles,\r\n    };\r\n\r\n    return userRef.set(userData, {\r\n      merge: true,\r\n    });\r\n  }\r\n  // Sign out\r\n  SignOut() {\r\n    return this.afAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['login']);\r\n    });\r\n  }\r\n\r\n  isAuthenticated(): Observable<boolean> {\r\n    return this.isAuthenticatedSubject.asObservable();\r\n  }\r\n\r\n  getUserData(): Observable<User> {\r\n    return this.afAuth.authState.pipe(\r\n      switchMap((user) => {\r\n        if (user) {\r\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n  \r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CategoryService {\r\n  categories = [\r\n    { name: 'General', icon: 'description' },\r\n    { name: 'Business', icon: 'add_business' },\r\n    { name: 'Entertainment', icon: 'theater_comedy' },\r\n    { name: 'Health', icon: 'health_and_safety' },\r\n    { name: 'Science', icon: 'biotech' },\r\n    { name: 'Sports', icon: 'sports_football' },\r\n    { name: 'Technology', icon: 'important_devices' },\r\n    { name: 'Search', icon: 'search' },\r\n    { name: 'Liked', icon: 'favorite' },\r\n  ];\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LikedService {\r\n  private likedArticles: LikedArticle[] = [];\r\n\r\n  addLikedArticle(likedArticle: LikedArticle) {\r\n    this.likedArticles.push(likedArticle);\r\n  }\r\n\r\n  getLikedArticles(): LikedArticle[] {\r\n    return this.likedArticles;\r\n  }\r\n}\r\n\r\nexport interface LikedArticle {\r\n  url: string;\r\n  title: string;\r\n  description: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Subject, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewsService {\r\n  private apiKey = environment.newsApiFive.apiKey;\r\n  private selectedCategory = new Subject<string>();\r\n\r\n  selectedCategory$ = this.selectedCategory.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  show(category: string) {\r\n    this.selectedCategory.next(category);\r\n    console.log(typeof category);\r\n  }\r\n\r\n  getTopHeadlines(category: string) {\r\n    return this.http\r\n      .get(\r\n        `https://newsapi.org/v2/top-headlines?country=US&category=${category}&apiKey=${this.apiKey}`\r\n      )\r\n      .pipe(\r\n        catchError((error: any) => {\r\n          console.error('Error:', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  searchArticles(filters: string) {\r\n    return this.http\r\n      .get(\r\n        `https://newsapi.org/v2/everything?q=${filters}&sortBy=publishedAt&apiKey=${this.apiKey}`\r\n      )\r\n      .pipe(\r\n        catchError((error: any) => {\r\n          console.error('API request failed:', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  newsApi: { apiKey: 'b29c939a0d9a42319b5b03b6de190043' },\r\n  newsApiTwo: { apiKey: '2dc8de50066345a48d40b362faeb8b76' },\r\n  newsApiThree: { apiKey: '25e51eebb3e843a48f30a351675dc2cc' },\r\n  newsApiFour: { apiKey: '88619abd5e234dbdbd034c607dae97dd' },\r\n  newsApiFive: { apiKey: '0266bc550d3e46f9893b52815d2118f2' },\r\n\r\n  firebase: {\r\n    apiKey: 'AIzaSyCRNjlAyNOhhSpCayhj8FGHHhbw4MtkpKA',\r\n    authDomain: 'news-project-579a3.firebaseapp.com',\r\n    projectId: 'news-project-579a3',\r\n    storageBucket: 'news-project-579a3.appspot.com',\r\n    messagingSenderId: '700119532137',\r\n    appId: '1:700119532137:web:9fd58caf58aa49ded8d8f8',\r\n    measurementId: 'G-DNL6PZSD2R',\r\n  },\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n// import { enableProdMode } from '@angular/core';\r\n// import { environment } from './environments/environment';\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n// if (environment.production) {\r\n//   enableProdMode();\r\n// }\r\n"],"names":["NavigationEnd","i0","ɵɵelementStart","ɵɵlistener","AppComponent_app_toolbar_2_Template_app_toolbar_categoryChanged_0_listener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","onCategoryChanged","ɵɵelementEnd","AppComponent","constructor","activatedRoute","router","title","selectedCategory","isLoggedIn","isLoginPage","url","subscribe","segments","some","segment","path","events","event","category","_","ɵɵdirectiveInject","i1","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_app_toolbar_2_Template","ɵɵadvance","ɵɵproperty","BrowserModule","AppRoutingModule","NewsListComponent","HttpClientModule","BrowserAnimationsModule","FormsModule","NewsService","MaterialModule","LoginComponent","RegistrationComponent","environment","AngularFireModule","AngularFirestoreModule","AngularFireAuthModule","AngularFireStorageModule","AngularFireDatabaseModule","ForgotPasswordComponent","VerifyEmailComponent","MatIconModule","SearchComponent","CategoryService","AuthService","MatButtonModule","MatDividerModule","MatFormFieldModule","MatInputModule","MatListModule","MatSidenavModule","MatToolbarModule","ReactiveFormsModule","MatSlideToggleModule","ToolbarComponent","HeaderComponent","LikedComponent","AppModule","bootstrap","_3","imports","initializeApp","firebase","declarations","trigger","style","animate","transition","authService","isLoading","ngOnInit","ForgotPasswordComponent_Template","ɵɵtext","ForgotPasswordComponent_Template_button_click_15_listener","_r0","ɵɵreference","show","ForgotPassword","value","ForgotPasswordComponent_mat_progress_bar_22_Template","undefined","ɵɵpipeBind1","isLoading$","opacity","transform","currentDay","currentDate","Date","currentTime","updateTime","setInterval","now","getDayOfWeek","getDay","dayIndex","daysOfWeek","HeaderComponent_Template","ɵɵtextInterpolate3","ɵɵpipeBind2","likedArticle_r1","ɵɵsanitizeUrl","ɵɵtextInterpolate1","ɵɵtextInterpolate","description","likedService","likedArticles","getUserData","user","getLikedArticles","goBackToTopHeadlines","navigate","i2","LikedService","i3","LikedComponent_Template","LikedComponent_Template_button_click_3_listener","LikedComponent_mat_card_11_Template","LoginComponent_Template","LoginComponent_Template_button_click_19_listener","_r3","_r1","SignIn","LoginComponent_mat_progress_bar_30_Template","NewsListComponent_mat_card_8_Template_a_click_12_listener","restoredCtx","article_r1","$implicit","ctx_r2","ɵɵpropertyInterpolate","urlToImage","ctx_r0","defaultImage","publishedAt","newsService","categoryService","categories","selectedCategory$","console","log","getNews","getTopHeadlines","data","headlines","articles","onCategoryChange","truncatedText","length","substring","articleUrl","likedArticle","addLikedArticle","inputs","NewsListComponent_Template","NewsListComponent_mat_card_8_Template","RegistrationComponent_Template","RegistrationComponent_Template_button_click_18_listener","SignUp","RegistrationComponent_mat_progress_bar_25_Template","searchResults","searchFilter","getSearchResults","trim","searchArticles","map","article","error","onFilterChange","filter","target","SearchComponent_Template","SearchComponent_Template_input_input_6_listener","SearchComponent_Template_button_click_12_listener","SearchComponent_mat_card_22_Template","EventEmitter","category_r2","icon","name","ToolbarComponent_mat_button_toggle_2_Template_mat_button_toggle_click_0_listener","_r8","ctx_r7","ToolbarComponent_mat_button_toggle_2_mat_icon_1_Template","ToolbarComponent_mat_button_toggle_2_span_2_Template","isSmallScreen","ToolbarComponent_span_3_Template_span_click_0_listener","_r10","ctx_r9","SignOut","onResize","innerWidth","windowInnerWidth","window","isAuthenticated","showSearchComponent","newsListComponent","categoryChanged","emit","authenticated","i4","hostBindings","ToolbarComponent_HostBindings","ɵɵresolveWindow","ToolbarComponent_Template_mat_button_toggle_group_ngModelChange_1_listener","ToolbarComponent_Template_mat_button_toggle_group_change_1_listener","ToolbarComponent_mat_button_toggle_2_Template","ToolbarComponent_span_3_Template","user_r1","email","VerifyEmailComponent_Template","VerifyEmailComponent_div_5_Template","VerifyEmailComponent_Template_button_click_7_listener","SendVerificationMail","userData","AuthGuard","canActivate","next","state","ɵɵinject","factory","ɵfac","providedIn","RouterModule","routes","redirectTo","pathMatch","component","forRoot","exports","CommonModule","MatButtonToggleModule","MatCardModule","MatProgressBarModule","MatExpansionModule","BehaviorSubject","switchMap","Subject","of","afs","afAuth","ngZone","isAuthenticatedSubject","asObservable","authState","localStorage","setItem","JSON","stringify","parse","getItem","hide","password","setTimeout","signInWithEmailAndPassword","then","result","SetUserData","catch","alert","message","createUserWithEmailAndPassword","currentUser","u","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","emailVerified","userRef","doc","uid","displayName","photoURL","set","merge","signOut","removeItem","pipe","valueChanges","AngularFirestore","AngularFireAuth","NgZone","push","catchError","throwError","http","apiKey","newsApiFive","get","filters","HttpClient","production","newsApi","newsApiTwo","newsApiThree","newsApiFour","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}